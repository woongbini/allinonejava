<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	<context:component-scan base-package="com.ensoa.order"/>
	 	<bean id="loggingAspect" class="com.ensoa.order.aspect.LoggingAspect"/>
 	<aop:config>
 		<aop:aspect ref="loggingAspect">
 			<aop:pointcut expression="execution(* com.ensoa.order.*.*.get*(..))
 													|| execution(* com.ensoa.order.*.*.find*(..))" id="getLogging"/>
 			<aop:pointcut expression="execution(* com.ensoa.order.*.*.save*(..))" id="saveLogging"/>
 			<aop:pointcut expression="execution(* com.ensoa.order.service.*.update*(com.ensoa.order.domain.Customer))
													and args(customer)" id="updateLogging"/>
 			<aop:before method="logBefore" pointcut-ref="getLogging"/>
 			<aop:before method="logBeforeUpdate" pointcut-ref="updateLogging"/>
 			<aop:after method="logAfter" pointcut-ref="getLogging"/>
 			<aop:after-returning method="logAfterReturning" pointcut-ref="getLogging"/>
 			<aop:after-throwing method="logAfterThrowing" pointcut-ref="getLogging"/>
 			<aop:around method="logAround" pointcut-ref="saveLogging"/>
 		</aop:aspect>
 	</aop:config>
</beans>
